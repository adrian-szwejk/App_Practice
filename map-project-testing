import React, { useState, useEffect } from 'react';
import { Platform, Text, View, StyleSheet,Dimensions } from 'react-native';
import Constants from 'expo-constants'; 
import * as Location from 'expo-location';
import MapView from 'react-native-maps';

export default function App() {
  const [location, setLocation] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);

  useEffect(() => {
    (async () => {
      if (Platform.OS === 'android' && !Constants.isDevice) {
        setErrorMsg(
          'Oops, this will not work on Snack in an Android emulator. Try it on your device!'
        );
        return;
      }
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
        setErrorMsg('Permission to access location was denied');
        return;
      }

      let location = await Location.getCurrentPositionAsync({});
      setLocation(location);
    })();
  }, []);

  let text = 'Waiting..';
  if (errorMsg) {
    text = errorMsg;
  } else if (location) {
    text = JSON.stringify(location);
  }

  var arr = new Array();
  arr=text.split(",");
  var dict={};
  for(var x=0; x<arr.length;x++){
    var arrs = new Array();
    arrs=arr[x].split(":");
    dict[arrs[0]]=arrs[1]
  }
  
  return (
    <View style={mapstyles.container}>
      <MapView style={mapstyles.map} initialRegion={{latitude:parseFloat(dict['"latitude"']),longitude:parseFloat(dict['"longitude"']),latitudeDelta: 0.1,longitudeDelta: 0.1}}/>
    </View>
  );
}
//<Text style={styles.paragraph}>{"Latitude: "+parseFloat(dict['"latitude"'])+"\nLongitude: "+parseFloat(dict['"longitude"'])+"\n"+text}</Text>
//<MapView style={styles.map} initialRegion={{latitude:parseFloat(dict['"latitude"']),longitude:parseFloat(dict['"longitude"']),latitudeDelta: 0.1,longitudeDelta: 0.1}}/>

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    padding: 20,
  },
  paragraph: {
    fontSize: 18,
    textAlign: 'center',
  },
});
const mapstyles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  map: {
    width: Dimensions.get('window').width,
    height: Dimensions.get('window').height,
  },
});


/*
import { Marker } from 'react-native-maps';
import MapView from 'react-native-maps';
import { StyleSheet, Text, View, Dimensions } from 'react-native';
import * as React from 'react';
import * as Permissions from 'expo-permissions';
import * as Location from 'expo-location';


export default class App extends React.Component{

  state = {
    location:{},
    errorMessage: ''
  }
  
  componentWillUnmount(){
    this._getLocation();  
  }

  _getLocation = async () => {
    const {status} = await location.requestPermissionsAsync()

    if(status != 'granted'){
      console.log('Permission not granted')
      this.setState({
        errorMessage: 'Permission not granted'
      })
    }

    const location = await Location.getCurrentPositionAsync();

    this.setState({
      location
    })
  }
  render(){
    return (
      <View style={style.container}>
      <MapView style={style.map} initialRegion={{latitude: this.state.location.latitude,longitude: this.state.longitude,latitudeDelta: this.state.latitudeDelta,longitudeDelta: this.state.longitudeDelta}}/>
      </View>
    );
  }
}

const style = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  map: {
    width: Dimensions.get('window').width,
    height: Dimensions.get('window').height,
  },
  paragraph: {
    margin: 24,
    fontSize: 18,
    fontWeight: 'bold',
    textAlign: 'center',
    color: '#34495e',
  },
});
*/
